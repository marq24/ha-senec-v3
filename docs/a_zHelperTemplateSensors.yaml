- sensor:
    - name: "POW average price Tibber",
      state_class: measurement
      unit_of_measurement: "€/kWh"}
      state: >
        {{state_attr('sensor.electricity_price_mmphome', 'avg_price')}}

- sensor:
    - name: "POW price now [TEST]"
      state_class: measurement
      unit_of_measurement: "€"
      state: >
        {%- set prices48 = (state_attr('sensor.tibber_prices', 'today')) | map(attribute='total') | list + (state_attr('sensor.tibber_prices', 'tomorrow')) | map(attribute='total') | list -%}
        {%- set times48 = (state_attr('sensor.tibber_prices', 'today')) | map(attribute='startsAt') | map('as_datetime') | list + (state_attr('sensor.tibber_prices', 'tomorrow')) | map(attribute='startsAt') | map('as_datetime') | list -%}
        {%- set ns = namespace(nowidx=0) -%}
        {%- for i in range(0, times48|length) -%}
          {%- if now() < times48[i] -%}
            {%- set ns.nowidx = max(0, i-1) -%}
            {%- break -%}
          {%- endif -%}
        {%- endfor -%}
        {{prices48[ns.nowidx]|round(4)}}

- sensor:
    - name: "POW PV remaining production"
      state_class: measurement
      unit_of_measurement: "kWh"
      state: >
        {%- set pv_remain = states('sensor.energy_production_today_remaining_sum')|float -%}
        {%- set home_usage_remain = (24 - (now().strftime('%H')|int) - 2) * 0.75 -%}
        {{max(0, pv_remain - home_usage_remain)}}

- sensor:
    - name: "POW battery stored energy"
      state_class: measurement
      unit_of_measurement: "kWh"
      state: >
        {{12 - 0.12*states('sensor.senec_battery_charge_percent')|float}}

- sensor:
    - name: "POW now in high cost window start"
      state_class: measurement
      unit_of_measurement: "Uhr"
      state: >
        {%- set hours = 12 -%}
        {%- set kwPerHour = 0.75 -%}
        {%- set tibb_avg_price = state_attr('sensor.electricity_price_mmphome', 'avg_price') -%}
        {%- set prices48 = (state_attr('sensor.tibber_prices', 'today')) | map(attribute='total') | list + (state_attr('sensor.tibber_prices', 'tomorrow')) | map(attribute='total') | list -%}
        {%- set times48 = (state_attr('sensor.tibber_prices', 'today')) | map(attribute='startsAt') | map('as_datetime') | list + (state_attr('sensor.tibber_prices', 'tomorrow')) | map(attribute='startsAt') | map('as_datetime') | list -%}
        {%- set nsnow = namespace(nowidx=-1, maxidx=prices48|length) -%}
        {%- for i in range(0, times48|length) -%}
          {%- if now() < times48[i] -%}
            {%- set nsnow.nowidx = max(0, i-1) -%}
            {%- break -%}
          {%- endif -%}
        {%- endfor -%}
        {%- set nsnow.maxidx = min(nsnow.nowidx + hours, nsnow.maxidx) -%}
        {%- set avgprice_ahead48 = average(prices48[nsnow.nowidx:nsnow.maxidx], tibb_avg_price)|round(4) -%}
        
        {%- set battery_energy = (0.12 * states('sensor.senec_battery_charge_percent')|int)|round(4) -%}
        {%- set pv_remain = states('sensor.energy_production_today_remaining_sum')|float -%}
        {%- set home_usage_remain = (24 - (now().strftime('%H')|int) - 2) * kwPerHour -%}
        {%- set remain_prod_energy = max(0, pv_remain - home_usage_remain)|round(3) -%}
        {%- set max_energy_time = ((battery_energy + remain_prod_energy) / kwPerHour)|round(3) -%}
        {%- set max_energy_time_h = max_energy_time|round(0) -%}
        
        {%- set max_price = max(prices48[nsnow.nowidx:nsnow.maxidx]) -%}
        {%- set max_price_idx = prices48.index(max_price) -%}
        {%- set ns = namespace(startidx=99, endidx=-1, maxidx=prices48|length) -%}
        {%- set ns.startidx = max_price_idx -%}
        {%- set ns.endidx = max_price_idx -%}
        {%- set min_avg_price = min(avgprice_ahead48, tibb_avg_price) -%}
        {%- for i in range(1, max(max_energy_time_h, hours))-%}
          {%- set lowidx = max(0, ns.startidx - 1) -%}
          {%- set highidx = min(ns.endidx + 1, ns.maxidx) -%}
          {%- set isLowCheaper = prices48[lowidx] < min_avg_price -%}
          {%- set isHighCheaper = prices48[highidx] < min_avg_price -%}
          {%- if (ns.endidx - ns.startidx >= max_energy_time) -%}
            {%- break -%}
          {%- endif -%}
          {%- if prices48[lowidx] == prices48[highidx] -%}
            {%- if not isLowCheaper -%}
              {%- set ns.startidx = lowidx -%}
            {%- endif -%}
            {%- if not isHighCheaper -%}
              {%- set ns.endidx = highidx -%}
            {%- endif -%}
          {%- elif prices48[lowidx] > prices48[highidx] -%}
            {%- if not isLowCheaper -%}
              {%- set ns.startidx = lowidx -%}
            {%- endif -%}
          {%- else -%}
            {%- if not isHighCheaper -%}
              {%- set ns.endidx = highidx -%}
            {%- endif -%}
          {%- endif -%}
        {%- endfor -%}
        {{times48[ns.startidx].strftime('%H')|int}}

- sensor:
    - name: "POW now in high cost window end"
      state_class: measurement
      unit_of_measurement: "Uhr"
      state: >
        {%- set hours = 12 -%}
        {%- set kwPerHour = 0.75 -%}
        {%- set tibb_avg_price = state_attr('sensor.electricity_price_mmphome', 'avg_price') -%}
        {%- set prices48 = (state_attr('sensor.tibber_prices', 'today')) | map(attribute='total') | list + (state_attr('sensor.tibber_prices', 'tomorrow')) | map(attribute='total') | list -%}
        {%- set times48 = (state_attr('sensor.tibber_prices', 'today')) | map(attribute='startsAt') | map('as_datetime') | list + (state_attr('sensor.tibber_prices', 'tomorrow')) | map(attribute='startsAt') | map('as_datetime') | list -%}
        {%- set nsnow = namespace(nowidx=-1, maxidx=prices48|length) -%}
        {%- for i in range(0, times48|length) -%}
          {%- if now() < times48[i] -%}
            {%- set nsnow.nowidx = max(0, i-1) -%}
            {%- break -%}
          {%- endif -%}
        {%- endfor -%}
        {%- set nsnow.maxidx = min(nsnow.nowidx + hours, nsnow.maxidx) -%}
        {%- set avgprice_ahead48 = average(prices48[nsnow.nowidx:nsnow.maxidx], tibb_avg_price)|round(4) -%}
        
        {%- set battery_energy = (0.12 * states('sensor.senec_battery_charge_percent')|int)|round(4) -%}
        {%- set pv_remain = states('sensor.energy_production_today_remaining_sum')|float -%}
        {%- set home_usage_remain = (24 - (now().strftime('%H')|int) - 2) * kwPerHour -%}
        {%- set remain_prod_energy = max(0, pv_remain - home_usage_remain)|round(3) -%}
        {%- set max_energy_time = ((battery_energy + remain_prod_energy) / kwPerHour)|round(3) -%}
        {%- set max_energy_time_h = max_energy_time|round(0) -%}
        
        {%- set max_price = max(prices48[nsnow.nowidx:nsnow.maxidx]) -%}
        {%- set max_price_idx = prices48.index(max_price) -%}
        {%- set ns = namespace(startidx=99, endidx=-1, maxidx=prices48|length) -%}
        {%- set ns.startidx = max_price_idx -%}
        {%- set ns.endidx = max_price_idx -%}
        {%- set min_avg_price = min(avgprice_ahead48, tibb_avg_price) -%}
        {%- for i in range(1, max(max_energy_time_h, hours))-%}
          {%- set lowidx = max(0, ns.startidx - 1) -%}
          {%- set highidx = min(ns.endidx + 1, ns.maxidx) -%}
          {%- set isLowCheaper = prices48[lowidx] < min_avg_price -%}
          {%- set isHighCheaper = prices48[highidx] < min_avg_price -%}
          {%- if (ns.endidx - ns.startidx >= max_energy_time) -%}
            {%- break -%}
          {%- endif -%}
          {%- if prices48[lowidx] == prices48[highidx] -%}
            {%- if not isLowCheaper -%}
              {%- set ns.startidx = lowidx -%}
            {%- endif -%}
            {%- if not isHighCheaper -%}
              {%- set ns.endidx = highidx -%}
            {%- endif -%}
          {%- elif prices48[lowidx] > prices48[highidx] -%}
            {%- if not isLowCheaper -%}
              {%- set ns.startidx = lowidx -%}
            {%- endif -%}
          {%- else -%}
            {%- if not isHighCheaper -%}
              {%- set ns.endidx = highidx -%}
            {%- endif -%}
          {%- endif -%}
        {%- endfor -%}
        {{times48[ns.endidx].strftime('%H')|int+1}}

- sensor:
    - name: "POW low price Phase start"
      state_class: measurement
      unit_of_measurement: "Uhr"
      state: >
        {%- set hours=12 -%}
        {%- set tibb_avg_price = state_attr('sensor.electricity_price_mmphome', 'avg_price') -%}
        {%- set prices48 = (state_attr('sensor.tibber_prices', 'today')) | map(attribute='total') | list + (state_attr('sensor.tibber_prices', 'tomorrow')) | map(attribute='total') | list -%}
        {%- set times48 = (state_attr('sensor.tibber_prices', 'today')) | map(attribute='startsAt') | map('as_datetime') | list + (state_attr('sensor.tibber_prices', 'tomorrow')) | map(attribute='startsAt') | map('as_datetime') | list -%}
        {%- set ns48 = namespace(nowidx=-1, startidx=99, endidx=-1, maxidx=prices48|length) -%}
        {%- for i in range(0, times48|length) -%}
          {%- if now() < times48[i] -%}
            {%- set ns48.nowidx = max(0, i-1) -%}
            {%- elif ns48.endidx == -1 -%}
            {%- break -%}
          {%- endif -%}
        {%- endfor -%}
        {%- set ns48.maxidx = min(ns48.nowidx + hours, ns48.maxidx) -%}
        {%- set avgprice_ahead48 = average(prices48[ns48.nowidx:ns48.maxidx], tibb_avg_price)|round(4) -%}
        {%- set avgprice48 = min(avgprice_ahead48, tibb_avg_price) -%}
        {%- for i in range(ns48.nowidx, ns48.maxidx) -%}
          {%- if avgprice48 > prices48[i] -%}
            {%- set ns48.startidx = min(i, ns48.startidx) -%}
            {%- set ns48.endidx = max(i, ns48.endidx) -%}
          {%- else -%}
            {%- break -%}
          {%- endif -%}
        {%- endfor -%}
        {%- if ns48.endidx > 0 and ns48.startidx < 99 -%}
        {{times48[ns48.startidx].strftime('%H')|int}}
        {%- else -%}
        {{'None'}}
        {%- endif -%}

- sensor:
    - name: "POW low price Phase end"
      state_class: measurement
      unit_of_measurement: "Uhr"
      state: >
        {%- set hours=12 -%}
        {%- set tibb_avg_price = state_attr('sensor.electricity_price_mmphome', 'avg_price') -%}
        {%- set prices48 = (state_attr('sensor.tibber_prices', 'today')) | map(attribute='total') | list + (state_attr('sensor.tibber_prices', 'tomorrow')) | map(attribute='total') | list -%}
        {%- set times48 = (state_attr('sensor.tibber_prices', 'today')) | map(attribute='startsAt') | map('as_datetime') | list + (state_attr('sensor.tibber_prices', 'tomorrow')) | map(attribute='startsAt') | map('as_datetime') | list -%}
        {%- set ns48 = namespace(nowidx=-1, startidx=99, endidx=-1, maxidx=prices48|length) -%}
        {%- for i in range(0, times48|length) -%}
          {%- if now() < times48[i] -%}
            {%- set ns48.nowidx = max(0, i-1) -%}
            {%- elif ns48.endidx == -1 -%}
            {%- break -%}
          {%- endif -%}
        {%- endfor -%}
        {%- set ns48.maxidx = min(ns48.nowidx + hours, ns48.maxidx) -%}
        {%- set avgprice_ahead48 = average(prices48[ns48.nowidx:ns48.maxidx], tibb_avg_price)|round(4) -%}
        {%- set avgprice48 = min(avgprice_ahead48, tibb_avg_price) -%}
        {%- for i in range(ns48.nowidx, ns48.maxidx) -%}
          {%- if avgprice48 > prices48[i] -%}
            {%- set ns48.startidx = min(i, ns48.startidx) -%}
            {%- set ns48.endidx = max(i, ns48.endidx) -%}
          {%- else -%}
            {%- break -%}
          {%- endif -%}
        {%- endfor -%}
        {%- if ns48.endidx > 0 and ns48.startidx < 99 -%}
        {{times48[ns48.endidx].strftime('%H')|int+1}}
        {%- else -%}
        {{'None'}}
        {%- endif -%}

- sensor:
    - name: "POW now in cheapest window start"
      state_class: measurement
      unit_of_measurement: "Uhr"
      state: >
        {%- set hours=12 -%}
        {%- set tibb_avg_price = state_attr('sensor.electricity_price_mmphome', 'avg_price') -%}
        {%- set prices48 = (state_attr('sensor.tibber_prices', 'today')) | map(attribute='total') | list + (state_attr('sensor.tibber_prices', 'tomorrow')) | map(attribute='total') | list -%}
        {%- set times48 = (state_attr('sensor.tibber_prices', 'today')) | map(attribute='startsAt') | map('as_datetime') | list + (state_attr('sensor.tibber_prices', 'tomorrow')) | map(attribute='startsAt') | map('as_datetime') | list -%}
        {%- set ns48 = namespace(nowidx=-1, startidx=99, endidx=-1, maxidx=prices48|length) -%}
        {%- for i in range(0, times48|length) -%}
          {%- if now() < times48[i] -%}
            {%- set ns48.nowidx = max(0, i-1) -%}
            {%- break -%}
          {%- endif -%}
        {%- endfor -%}
        
        {%- set ns48.maxidx = min(ns48.nowidx + hours, ns48.maxidx) -%}
        {%- set avgprice_ahead48 = average(prices48[ns48.nowidx:ns48.maxidx], tibb_avg_price)|round(4) -%}
        {%- set avgprice48 = min(avgprice_ahead48, tibb_avg_price) -%}
        {%- for i in range(ns48.nowidx, ns48.maxidx) -%}
          {%- if avgprice48 > prices48[i] -%}
            {%- set ns48.startidx = min(i, ns48.startidx) -%}
            {%- set ns48.endidx = max(i, ns48.endidx) -%}
          {%- elif ns48.endidx == -1 -%}
          {%- else -%}
            {%- break -%}
          {%- endif -%}
        {%- endfor -%}
        {%- if ns48.endidx > 0 and ns48.startidx < 99 -%}
        {%- set low_price_window = (ns48.endidx - ns48.startidx)+1|round(0) -%}
        {%- else -%}
        {%- set low_price_window = 0|int -%}
        {%- endif -%}
        
        {%- set req_load_time = states('sensor.pow_battery_full_charge_duration')|float -%}
        {%- if low_price_window > 1 and req_load_time < (low_price_window-1) -%}
          {%- set ns = namespace(startidx=99, endidx=-1, maxidx=prices48|length) -%}
          {%- set min_price = min(prices48[ns48.startidx:ns48.endidx]) -%}
          {%- set min_price_idx = prices48.index(min_price) -%}
          {%- set ns.startidx = min_price_idx -%}
          {%- set ns.endidx = min_price_idx -%}
        
          {%- for i in range(1, hours)-%}
            {%- set lowidx = max(0, ns.startidx - 1) -%}
            {%- set highidx = min(ns.endidx + 1, ns.maxidx) -%}
            {%- if prices48[lowidx] == prices48[highidx] -%}
              {%- set ns.startidx = lowidx -%}
              {%- set ns.endidx = highidx -%}
            {%- elif prices48[lowidx] < prices48[highidx] -%}
              {%- set ns.startidx = lowidx -%}
            {%- else -%}
                  {%- set ns.endidx = highidx -%}
            {%- endif -%}
            {%- if ns.endidx - ns.startidx >= req_load_time -%}
              {%- break -%}
            {%- endif -%}
          {%- endfor -%} 
          
          {%- if ns.startidx < 99 and ns.endidx > -1 -%}
        {{times48[ns.startidx].strftime('%H')|int}}
          {%- else -%}
        {{'None'}}
          {%- endif -%}
        {%- else -%}
        {{'None'}}
        {%- endif -%}

- sensor:
    - name: "POW now in cheapest window end"
      state_class: measurement
      unit_of_measurement: "Uhr"
      state: >
        {%- set hours=12 -%}
        {%- set tibb_avg_price = state_attr('sensor.electricity_price_mmphome', 'avg_price') -%}
        {%- set prices48 = (state_attr('sensor.tibber_prices', 'today')) | map(attribute='total') | list + (state_attr('sensor.tibber_prices', 'tomorrow')) | map(attribute='total') | list -%}
        {%- set times48 = (state_attr('sensor.tibber_prices', 'today')) | map(attribute='startsAt') | map('as_datetime') | list + (state_attr('sensor.tibber_prices', 'tomorrow')) | map(attribute='startsAt') | map('as_datetime') | list -%}
        {%- set ns48 = namespace(nowidx=-1, startidx=99, endidx=-1, maxidx=prices48|length) -%}
        {%- for i in range(0, times48|length) -%}
          {%- if now() < times48[i] -%}
            {%- set ns48.nowidx = max(0, i-1) -%}
            {%- break -%}
          {%- endif -%}
        {%- endfor -%}
        
        {%- set ns48.maxidx = min(ns48.nowidx + hours, ns48.maxidx) -%}
        {%- set avgprice_ahead48 = average(prices48[ns48.nowidx:ns48.maxidx], tibb_avg_price)|round(4) -%}
        {%- set avgprice48 = min(avgprice_ahead48, tibb_avg_price) -%}
        {%- for i in range(ns48.nowidx, ns48.maxidx) -%}
          {%- if avgprice48 > prices48[i] -%}
            {%- set ns48.startidx = min(i, ns48.startidx) -%}
            {%- set ns48.endidx = max(i, ns48.endidx) -%}
          {%- elif ns48.endidx == -1 -%}
          {%- else -%}
            {%- break -%}
          {%- endif -%}
        {%- endfor -%}
        {%- if ns48.endidx > 0 and ns48.startidx < 99 -%}
        {%- set low_price_window = (ns48.endidx - ns48.startidx)+1|round(0) -%}
        {%- else -%}
        {%- set low_price_window = 0|int -%}
        {%- endif -%}
        
        {%- set req_load_time = states('sensor.pow_battery_full_charge_duration')|float -%}
        {%- if low_price_window > 1 and req_load_time < (low_price_window-1) -%}
          {%- set ns = namespace(startidx=99, endidx=-1, maxidx=prices48|length) -%}
          {%- set min_price = min(prices48[ns48.startidx:ns48.endidx]) -%}
          {%- set min_price_idx = prices48.index(min_price) -%}
          {%- set ns.startidx = min_price_idx -%}
          {%- set ns.endidx = min_price_idx -%}
        
          {%- for i in range(1, hours)-%}
            {%- set lowidx = max(0, ns.startidx - 1) -%}
            {%- set highidx = min(ns.endidx + 1, ns.maxidx) -%}
            {%- if prices48[lowidx] == prices48[highidx] -%}
              {%- set ns.startidx = lowidx -%}
              {%- set ns.endidx = highidx -%}
            {%- elif prices48[lowidx] < prices48[highidx] -%}
              {%- set ns.startidx = lowidx -%}
            {%- else -%}
                  {%- set ns.endidx = highidx -%}
            {%- endif -%}
            {%- if ns.endidx - ns.startidx >= req_load_time -%}
              {%- break -%}
            {%- endif -%}
          {%- endfor -%} 
          
          {%- if ns.startidx < 99 and ns.endidx > -1 -%}
        {{times48[ns.endidx].strftime('%H')|int+1}}
          {%- else -%}
        {{'None'}}
          {%- endif -%}
        {%- else -%}
        {{'None'}}
        {%- endif -%}

- sensor:
    - name: "POW now in cheapest window duration"
      state_class: measurement
      unit_of_measurement: "h"
      state: >
        {%- set hours=12 -%}
        {%- set tibb_avg_price = state_attr('sensor.electricity_price_mmphome', 'avg_price') -%}
        {%- set prices48 = (state_attr('sensor.tibber_prices', 'today')) | map(attribute='total') | list + (state_attr('sensor.tibber_prices', 'tomorrow')) | map(attribute='total') | list -%}
        {%- set times48 = (state_attr('sensor.tibber_prices', 'today')) | map(attribute='startsAt') | map('as_datetime') | list + (state_attr('sensor.tibber_prices', 'tomorrow')) | map(attribute='startsAt') | map('as_datetime') | list -%}
        {%- set ns48 = namespace(nowidx=-1, startidx=99, endidx=-1, maxidx=prices48|length) -%}
        {%- for i in range(0, times48|length) -%}
          {%- if now() < times48[i] -%}
            {%- set ns48.nowidx = max(0, i-1) -%}
            {%- break -%}
          {%- endif -%}
        {%- endfor -%}
        
        {%- set ns48.maxidx = min(ns48.nowidx + hours, ns48.maxidx) -%}
        {%- set avgprice_ahead48 = average(prices48[ns48.nowidx:ns48.maxidx], tibb_avg_price)|round(4) -%}
        {%- set avgprice48 = min(avgprice_ahead48, tibb_avg_price) -%}
        {%- for i in range(ns48.nowidx, ns48.maxidx) -%}
          {%- if avgprice48 > prices48[i] -%}
            {%- set ns48.startidx = min(i, ns48.startidx) -%}
            {%- set ns48.endidx = max(i, ns48.endidx) -%}
          {%- elif ns48.endidx == -1 -%}
          {%- else -%}
            {%- break -%}
          {%- endif -%}
        {%- endfor -%}
        {%- if ns48.endidx > 0 and ns48.startidx < 99 -%}
        {%- set low_price_window = (ns48.endidx - ns48.startidx)+1|round(0) -%}
        {%- else -%}
        {%- set low_price_window = 0|int -%}
        {%- endif -%}
        
        {%- set req_load_time = states('sensor.pow_battery_full_charge_duration')|float -%}
        {%- if low_price_window > 1 and req_load_time < (low_price_window-1) -%}
          {%- set ns = namespace(startidx=99, endidx=-1, maxidx=prices48|length) -%}
          {%- set min_price = min(prices48[ns48.startidx:ns48.endidx]) -%}
          {%- set min_price_idx = prices48.index(min_price) -%}
          {%- set ns.startidx = min_price_idx -%}
          {%- set ns.endidx = min_price_idx -%}
        
          {%- for i in range(1, hours)-%}
            {%- set lowidx = max(0, ns.startidx - 1) -%}
            {%- set highidx = min(ns.endidx + 1, ns.maxidx) -%}
            {%- if prices48[lowidx] == prices48[highidx] -%}
              {%- set ns.startidx = lowidx -%}
              {%- set ns.endidx = highidx -%}
            {%- elif prices48[lowidx] < prices48[highidx] -%}
              {%- set ns.startidx = lowidx -%}
            {%- else -%}
                  {%- set ns.endidx = highidx -%}
            {%- endif -%}
            {%- if ns.endidx - ns.startidx >= req_load_time -%}
              {%- break -%}
            {%- endif -%}
          {%- endfor -%} 
          
          {%- if ns.startidx < 99 and ns.endidx > -1 -%}
        {{(ns.endidx - ns.startidx)|int+1}}
          {%- else -%}
        {{'None'}}
          {%- endif -%}
        {%- else -%}
        {{'None'}}
        {%- endif -%}

- sensor:
    - name: "POW now in high cost window duration"
      state_class: measurement
      unit_of_measurement: "h"
      state: >
        {%- set hours = 12 -%}
        {%- set kwPerHour = 0.75 -%}
        {%- set tibb_avg_price = state_attr('sensor.electricity_price_mmphome', 'avg_price') -%}
        {%- set prices48 = (state_attr('sensor.tibber_prices', 'today')) | map(attribute='total') | list + (state_attr('sensor.tibber_prices', 'tomorrow')) | map(attribute='total') | list -%}
        {%- set times48 = (state_attr('sensor.tibber_prices', 'today')) | map(attribute='startsAt') | map('as_datetime') | list + (state_attr('sensor.tibber_prices', 'tomorrow')) | map(attribute='startsAt') | map('as_datetime') | list -%}
        {%- set nsnow = namespace(nowidx=-1, maxidx=prices48|length) -%}
        {%- for i in range(0, times48|length) -%}
          {%- if now() < times48[i] -%}
            {%- set nsnow.nowidx = max(0, i-1) -%}
            {%- break -%}
          {%- endif -%}
        {%- endfor -%}
        {%- set nsnow.maxidx = min(nsnow.nowidx + hours, nsnow.maxidx) -%}
        {%- set avgprice_ahead48 = average(prices48[nsnow.nowidx:nsnow.maxidx], tibb_avg_price)|round(4) -%}
        
        {%- set battery_energy = (0.12 * states('sensor.senec_battery_charge_percent')|int)|round(4) -%}
        {%- set pv_remain = states('sensor.energy_production_today_remaining_sum')|float -%}
        {%- set home_usage_remain = (24 - (now().strftime('%H')|int) - 2) * kwPerHour -%}
        {%- set remain_prod_energy = max(0, pv_remain - home_usage_remain)|round(3) -%}
        {%- set max_energy_time = ((battery_energy + remain_prod_energy) / kwPerHour)|round(3) -%}
        {%- set max_energy_time_h = max_energy_time|round(0) -%}
        
        {%- set max_price = max(prices48[nsnow.nowidx:nsnow.maxidx]) -%}
        {%- set max_price_idx = prices48.index(max_price) -%}
        {%- set ns = namespace(startidx=99, endidx=-1, maxidx=prices48|length) -%}
        {%- set ns.startidx = max_price_idx -%}
        {%- set ns.endidx = max_price_idx -%}
        {%- set min_avg_price = min(avgprice_ahead48, tibb_avg_price) -%}
        {%- for i in range(1, max(max_energy_time_h, hours))-%}
          {%- set lowidx = max(0, ns.startidx - 1) -%}
          {%- set highidx = min(ns.endidx + 1, ns.maxidx) -%}
          {%- set isLowCheaper = prices48[lowidx] < min_avg_price -%}
          {%- set isHighCheaper = prices48[highidx] < min_avg_price -%}
          {%- if (ns.endidx - ns.startidx >= max_energy_time) -%}
            {%- break -%}
          {%- endif -%}
          {%- if prices48[lowidx] == prices48[highidx] -%}
            {%- if not isLowCheaper -%}
              {%- set ns.startidx = lowidx -%}
            {%- endif -%}
            {%- if not isHighCheaper -%}
              {%- set ns.endidx = highidx -%}
            {%- endif -%}
          {%- elif prices48[lowidx] > prices48[highidx] -%}
            {%- if not isLowCheaper -%}
              {%- set ns.startidx = lowidx -%}
            {%- endif -%}
          {%- else -%}
            {%- if not isHighCheaper -%}
              {%- set ns.endidx = highidx -%}
            {%- endif -%}
          {%- endif -%}
        {%- endfor -%}
        {{(ns.endidx-ns.startidx)|int+1}}

- sensor:
    - name: "POW available energy duration [Battery + PV (remaining - home usage)]"
      state_class: measurement
      unit_of_measurement: "h"
      state: >
        {%- set kwPerHour = 0.75 -%}
        {%- set battery_energy = (0.12 * states('sensor.senec_battery_charge_percent')|int)|round(4) -%}
        {%- set pv_remain = states('sensor.energy_production_today_remaining_sum')|float -%}
        {%- set home_usage_remain = (24 - (now().strftime('%H')|int) - 2) * kwPerHour -%}
        {%- set remain_prod_energy = max(0, pv_remain - home_usage_remain)|round(3) -%}
        {%- set max_energy_time = ((battery_energy + remain_prod_energy) / kwPerHour)|round(3) -%}
        {{max_energy_time}}
